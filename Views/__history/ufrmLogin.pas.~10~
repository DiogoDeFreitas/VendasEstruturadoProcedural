unit ufrmLogin;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.ExtCtrls;

type
  TfrmLogin = class(TForm)
    edtLogin: TEdit;
    edtSenha: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    btnLogar: TButton;
    Button2: TButton;
    fdQryLogin: TFDQuery;
    Panel1: TPanel;
    procedure Button2Click(Sender: TObject);
    procedure btnLogarClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure edtSenhaKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
    function Login(pLogin, pSenha: String): Boolean;
  public
    { Public declarations }
  end;

var
  frmLogin: TfrmLogin;

implementation

{$R *.dfm}

uses udmConexao, uCrpt;

procedure TfrmLogin.btnLogarClick(Sender: TObject);
begin
  if not Login(edtLogin.Text, edtSenha.Text) then
    raise Exception.Create('Login Incorreto')
  else
    Self.Close;  
end;

procedure TfrmLogin.Button2Click(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TfrmLogin.edtSenhaKeyPress(Sender: TObject; var Key: Char);
begin
  if key = #13 then
    btnLogar.Click;
end;

procedure TfrmLogin.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  if not Login(edtLogin.Text, edtSenha.Text) then
    Application.Terminate;

  Action := caFree;  
end;

function TfrmLogin.Login(pLogin, pSenha: String): Boolean;
begin
  Result := False;
  fdQryLogin.Close;
  fdQryLogin.ParamByName('LOGIN').AsAnsiString := pLogin;
  fdQryLogin.Open();

  fdQryLogin.First;
  while not fdQryLogin.Eof do
  begin
    if pSenha = Criptografa('D', fdQryLogin.FieldByName('SENHA').AsAnsiString) then
    begin
      Result := True;
      Break;
    end;
    fdQryLogin.Next;
  end;
end;

end.
